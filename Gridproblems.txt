UNIT 6 
1) Ant on Chessboard problem
#include <bits/stdc++.h>
using namespace std;
int n, x, y;
int main() {
 while(true){
 scanf("%d", &n);
 if(n == 0) break;
 int root = ceil(sqrt(n)); //ceil(sqrt(8)) ---> ceil(2.82) ---> 3
 int c = root * root - root + 1; //c = 3 * 3 - 3 + 1 ---> 7
 x = y = root; //x = y = 3
 if(root % 2 == 0) { //3%2 != 0
 if(n > c) y -= n - c;
 else x -= c - n;
 } else {
 if(n > c) x -= n - c; //8 > 7 ---> x = x - (n-c) ---> x = 2
 else y -= c - n;
 }
 printf("\n%d %d", x, y); //x = 2, y = 3
 }}
Sample Input
8
20
25
0
Sample Output
2 3
5 4
1 5
2) Bee maja Problem
#include <bits/stdc++.h>
using namespace std;
#define MAXN 102200
int offset[5][2] = {{-1,0}, {0,-1}, {1,-1}, {1,0}, {0,1}};
pair<int,int> maja_bee[MAXN];
int main()
{
for (int i=1, j=1, k=0; i<MAXN ; i += j, j += 6, k++)
{maja_bee[i] = make_pair(0, k);
for (int m = 0; m < k; m++)
maja_bee[i-m] = make_pair(m, k-m);
int current = i;
for (int m = 0; m < 5; m++)
for (int n=0; n<k; n++)
{
int x = maja_bee[current].first + offset[m][0];
int y = maja_bee[current].second + offset[m][1];
maja_bee[current + 1] = make_pair(x,y);
current++;
}
}
int willi_bee;
while(cin >> willi_bee){
 cout<<endl;
cout << maja_bee[willi_bee].first << " " << maja_bee[willi_bee].second << endl;
}
}
Sample Input
1
23
4
5
Sample Output
0 0
0 1
-1 1
-1 0
0 -1